name: Build and Push

#on:
#  push:
#    tags:
#      - v*

on: [push]

jobs:
  build-and-push:

    runs-on: ubuntu-18.04
    timeout-minutes: 300

    steps:
    # Initial setup
    - name: checkout
      uses: actions/checkout@v2

    - name: configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-1

    - name: Create env file
      run: touch .env

    - name: Echo SECRET_KEY
      run: echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env

    - name: Echo DATABASE_URL
      run: echo "DATABASE_URL=sqlite:///db.sqlite3" >> .env

    - name: Echo SQLITE_URL
      run: echo "SQLITE_URL=sqlite:///db.sqlite3" >> .env

    - name: Echo AWS_ACCESS_KEY_ID
      run: echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_KEY_ID }}" >> .env

    - name: Echo AWS_SECRET_ACCESS_KEY
      run: echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> .env

    # build and push this image
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPO_NAME }}
      run: |
        IMAGE_TAG=$(echo ${{ github.ref }} | sed -e "s#refs/heads/##g")
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
    #   IMAGE_TAG_=$(echo ${{ github.ref }} | sed -e "s#refs/tags/##g")

    # Insert Image URI to Task Definition
    - name: render new task definition
      id: render-container
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      env:
        IMAGE_TAG: $(echo ${{ github.ref }} | sed -e "s#refs/heads/##g")
      # IMAGE_TAG_: $(echo ${{ github.ref }} | sed -e "s#refs/tags/##g")
      with:
        task-definition: django_app-ecs-task-def.json
        container-name: django_app
        image: ${{ steps.login-ecr.outputs.registry }}/django_app:${{ env.IMAGE_TAG }}

    # Update Task Definition
    - name: register new task definition family
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.render-container.outputs.task-definition }}
        cluster: sandcastle
